apiVersion: v1
kind: Namespace
metadata:
  name: it
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: itwebhook-cert
  namespace: it
spec:
  dnsNames:
  - it-sidecar.it.svc
  - it-sidecar.it.cluster.local
  issuerRef:
    kind: Issuer
    name: itwebhook-selfsigned-issuer
  secretName: itwebhook-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: itwebhook-selfsigned-issuer
  namespace: it
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: it-webhook-cfg
  annotations:
    cert-manager.io/inject-ca-from: it/itwebhook-cert
webhooks:
- name: it.sidecar.webhook
  clientConfig:
    service:
      name: it-sidecar
      namespace: it
      path: "/mutate"
    caBundle: Cg==
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  objectSelector:
    matchLabels:
      it-sidecar: "true"  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: it-sidecar-cfg
  namespace: it
data:
  port: "8443"
  confpath: "/etc/webhook/config"
  temp.yaml: |
    containers:
    - name: nginx
      image: nginx:1.19.7
      imagePullPolicy: Always
      ports:
      - containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: it-sidecar
  namespace: it
  labels:
    app: it-sidecar
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app: it-sidecar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: it-sidecar
  namespace: it
spec:
  replicas: 1
  selector:
    matchLabels:
      app: it-sidecar
  template:
    metadata:
      labels:
        app: it-sidecar
    spec:
      containers:
      - name: it-sidecar
        envFrom:
        - configMapRef:
            name: it-sidecar-cfg
        image: aaa:0.0.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: webhook-certs
          mountPath: /key
        - name: webhook-config
          mountPath: /etc/webhook/config
      imagePullSecrets:
      - name: docker-pull-cred
      volumes:
      - name: webhook-certs
        secret:
          secretName: itwebhook-cert
      - name: webhook-config
        configMap:
          name: it-sidecar-cfg
